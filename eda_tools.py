import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st

# --- Fun√ß√£o para carregar dados ---
def carregar_dados(arquivo):
    """Carrega um arquivo CSV e retorna um DataFrame."""
    try:
        df = pd.read_csv(arquivo)
        st.success("‚úÖ Arquivo carregado com sucesso!")
        return df
    except Exception as e:
        st.error(f"‚ùå Erro ao carregar o arquivo: {e}")
        return None

# --- Mostrar informa√ß√µes b√°sicas ---
def info_basica(df):
    """Mostra informa√ß√µes b√°sicas do DataFrame."""
    st.subheader("üìä Informa√ß√µes B√°sicas")
    st.write(f"**N√∫mero de Linhas:** {df.shape[0]}")
    st.write(f"**N√∫mero de Colunas:** {df.shape[1]}")
    st.write("**Colunas:**", list(df.columns))
    st.write("**Tipos de Dados:**")
    st.dataframe(df.dtypes.astype(str))

# --- Estat√≠sticas descritivas ---
def estatisticas(df):
    """Exibe estat√≠sticas descritivas do DataFrame."""
    st.subheader("üìà Estat√≠sticas Descritivas")
    try:
        st.dataframe(df.describe(numeric_only=True).round(4))
    except Exception as e:
        st.error(f"Erro ao calcular estat√≠sticas: {e}")

# --- Mostrar valores nulos ---
def valores_nulos(df):
    """Mostra a quantidade de valores nulos por coluna."""
    st.subheader("‚ö†Ô∏è Valores Nulos")
    st.dataframe(df.isnull().sum())

# --- Gr√°fico de histograma ---
def histograma(df, coluna):
    """Gera um histograma de uma coluna num√©rica."""
    st.subheader(f"üìä Histograma - {coluna}")
    fig, ax = plt.subplots()
    try:
        series = pd.to_numeric(df[coluna], errors='coerce').dropna()
        series.hist(ax=ax, bins=30)
        ax.set_xlabel(coluna)
        ax.set_ylabel('Frequ√™ncia')
        st.pyplot(fig)
    except Exception as e:
        st.error(f"Erro ao gerar histograma: {e}")

# --- Mapa de correla√ß√£o ---
def mapa_correlacao(df):
    """Gera um mapa de correla√ß√£o entre vari√°veis num√©ricas."""
    st.subheader("üîó Mapa de Correla√ß√£o")
    try:
        corr = df.corr(numeric_only=True)
        fig, ax = plt.subplots(figsize=(8,6))
        cax = ax.matshow(corr, cmap=plt.cm.coolwarm)
        plt.xticks(range(len(corr.columns)), corr.columns, rotation=90)
        plt.yticks(range(len(corr.columns)), corr.columns)
        fig.colorbar(cax)
        st.pyplot(fig)
    except Exception as e:
        st.error(f"Erro ao gerar mapa de correla√ß√£o: {e}")
